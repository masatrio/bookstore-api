version: '3.8'

services:
  app:
    build: .
    container_name: bookstore-app
    ports:
      - "8080:8080"
    environment:
      - PORT=${PORT}
      - SERVICE_NAME=${SERVICE_NAME}
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT}
      - SERVER_IDLE_TIMEOUT=${SERVER_IDLE_TIMEOUT}
      - LOG_LEVEL=${LOG_LEVEL}
      - TRACING=${TRACING}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=${JWT_EXPIRY}
      - DATABASE_URL=${DATABASE_URL}
      - DB_MAX_IDLE_CONNECTION=${DB_MAX_IDLE_CONNECTION}
      - DB_MAX_ACTIVE_CONNECTION=${DB_MAX_ACTIVE_CONNECTION}
      - DB_MAX_IDLE_TIME=${DB_MAX_IDLE_TIME}
      - DB_TIMEOUT=${DB_TIMEOUT}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - OTEL_EXPORTER_JAEGER_ENDPOINT=${OTEL_EXPORTER_JAEGER_ENDPOINT}
      - OTEL_SERVICE_NAME=${SERVICE_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - db
      - redis
      - collector
      - seed
    networks:
      - bookstore-api-network

  db:
    image: postgres:15-alpine
    container_name: bookstore-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - bookstore-api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookstore_user -d bookstore"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    container_name: bookstore-migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database", "${DATABASE_URL}", "up"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bookstore-api-network

  seed:
    image: golang:1.22-alpine
    container_name: bookstore-seed
    command: ["sh", "-c", "until nc -z db 5432; do sleep 3; done; go run cmd/seed/main.go"]
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - migrate
    networks:
      - bookstore-api-network

  redis:
    image: redis:7-alpine
    container_name: bookstore-redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - bookstore-api-network

  collector:
    image: otel/opentelemetry-collector:0.55.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "55680:55680"
    networks:
      - bookstore-api-network

  jaeger:
    image: jaegertracing/all-in-one:1.42
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - bookstore-api-network

networks:
  bookstore-api-network:
